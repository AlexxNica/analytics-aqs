# Simple test spec

swagger: 2.0

paths:
  /{module:service}/test/{title}{/revision}:
    get:
      x-setup-handler:
        - init_storage:
            uri: /{domain}/sys/key_value/testservice.test

      x-request-handler:
        - get_from_storage:
            request:
              uri: /{domain}/sys/key_value/testservice.test/{title}
              headers:
                'cache-control': '{{cache-control}}'
            catch:
              status: 404
            return_if:
              status: 200
        - get_from_api:
            request:
              uri: http://en.wikipedia.org/wiki/{+title}
              body: '{{request.body}}'
        - store:
            request:
              method: put
              uri: /{domain}/sys/key_value/testservice.test/{title}
              headers: '{{get_from_api.headers}}'
              body: '{{get_from_api.body}}'
        - return_response:
            return:
              status: '{$.get_from_api.status}'
              headers:
                'content-type': '{$.get_from_api.headers.content-type}'
                'etag': '{$.store.headers.etag}'
              body: '{$.get_from_api.body}'

      x-monitor: false

  /{module:service}/test_parallel/{key1}/{key2}:
    get:
      x-request-handler:
        - get_from_api1:
            request:
              uri: http://en.wikipedia.org/wiki/{+key1}
          get_from_api2:
            request:
              uri: http://en.wikipedia.org/wiki/{+key2}
        - return_response:
            return:
              status: 200
              body:
                first: '{{global.get_from_api1}}'
                second: '{{global.get_from_api2}}'
      x-monitor: true
      x-amples:
        - title: Retreives parallel content with simple service
          request:
            params:
              key1: User:GWicke/Date
              key2: User:GWicke/Date
          response:
            status: 200
            body:
              first:
                status: 200
                headers:
                  content-type: /^text\/html.+/
              second:
                status: 200
                headers:
                  content-type: /^text\/html.+/

  /{module:post_data}/:
    post:
      security:
        - header_match:
            - header: 'x-client-ip'
              patterns:
                - internal
      x-request-handler:
        - put_to_storage:
            request:
              method: put
              uri: /{domain}/sys/post_data/post.test/
              headers: '{$.request.headers}'
              body: '{$.request.body}'
      x-monitor: false

  /{module:post_data}/{hash}:
    get:
      x-setup-handler:
        - init_storage:
            uri: /{domain}/sys/post_data/post.test
      x-request-handler:
        - get_from_storage:
            request:
              uri: /{domain}/sys/post_data/post.test/{hash}
      x-monitor: false

  /{module:pageviews}/insert-per-article-flat/{project}/{article}/{granularity}/{timestamp}/{views}:
    post:
      x-request-handler:
        - put_to_storage:
            request:
              method: 'put'
              uri: '/{domain}/sys/table/pageviews.per.article.flat/'
              body:
                table: 'pageviews.per.article.flat'
                attributes:
                  project: '{$.request.params.project}'
                  article: '{$.request.params.article}'
                  granularity: '{$.request.params.granularity}'
                  timestamp: '{$.request.params.timestamp}'
                  aa:  '{$.request.params.views}1'
                  ab:  '{$.request.params.views}2'
                  as:  '{$.request.params.views}3'
                  au:  '{$.request.params.views}4'
                  da:  '{$.request.params.views}5'
                  db:  '{$.request.params.views}6'
                  ds:  '{$.request.params.views}7'
                  du:  '{$.request.params.views}8'
                  maa: '{$.request.params.views}9'
                  mab: '{$.request.params.views}10'
                  mas: '{$.request.params.views}11'
                  mau: '{$.request.params.views}12'
                  mwa: '{$.request.params.views}13'
                  mwb: '{$.request.params.views}14'
                  mws: '{$.request.params.views}15'
                  mwu: '{$.request.params.views}16'
      x-monitor: false

  /{module:pageviews}/insert-aggregate/{project}/{access}/{agent}/{granularity}/{timestamp}/{views}:
    post:
      x-request-handler:
        - put_to_storage:
            request:
              method: 'put'
              uri: '/{domain}/sys/table/pageviews.per.project/'
              body:
                table: 'pageviews.per.project'
                attributes:
                  project: '{$.request.params.project}'
                  access: '{$.request.params.access}'
                  agent: '{$.request.params.agent}'
                  granularity: '{$.request.params.granularity}'
                  timestamp: '{$.request.params.timestamp}'
                  views: '{$.request.params.views}'
      x-monitor: false

  /{module:pageviews}/insert-aggregate-long/{project}/{access}/{agent}/{granularity}/{timestamp}/{v}:
    post:
      x-request-handler:
        - put_to_storage:
            request:
              method: 'put'
              uri: '/{domain}/sys/table/pageviews.per.project/'
              body:
                table: 'pageviews.per.project'
                attributes:
                  project: '{$.request.params.project}'
                  access: '{$.request.params.access}'
                  agent: '{$.request.params.agent}'
                  granularity: '{$.request.params.granularity}'
                  timestamp: '{$.request.params.timestamp}'
                  v: '{$.request.params.v}'
      x-monitor: false

  /{module:pageviews}/insert-top/{project}/{access}/{year}/{month}/{day}:
    post:
      x-request-handler:
        - put_to_storage:
            request:
              method: 'put'
              uri: '/{domain}/sys/table/top.pageviews/'
              body:
                table: 'top.pageviews'
                attributes:
                  project: '{$.request.params.project}'
                  access: '{$.request.params.access}'
                  year: '{$.request.params.year}'
                  month: '{$.request.params.month}'
                  day: '{$.request.params.day}'
                  articlesJSON: '{$.request.body.articles}'
      x-monitor: false
